
"Title": "Server development for Blog/Portfolio"
"Subtitle": "This post will detail the server-side construction of this page."
"content": "I've been having a blast working on this web app on my own to serve as my personal portfolio and a tech blog that I can use to network with people in the industry.\n
    I started with the backend, though most of the functionality that I created will not be accessible by users other than myself for some time. The server-side of this project is built with Javascript, Node, and Express, and uses MongoDB and Mongoose to handle my data. I created models for Users, Projects, Posts, and Comments.\n
    The User model defines the User object to be saved in the MongoDB Database cluster. Every user object requires an email, password, and username. Optional information includes a name for dynamic greetings on the app. The dates of creation and of last update will also be created automatically. A boolean value called \"adminStatus\" will default to false for everyone but myself, though I will give admins the ability to change that value for other users. This is not so much because I find it necessary, but because it sounds like a task that would be good coding practice. Finally, for my own information, I have added a counter called \"visits\" that increments by one every time the user logs in.\n
    The Project model contains a name, description, and array called \"stack\" that I will use to detail all the tech I used for said project, and image URL, link to Github, and a Live Link. Like before, the dates for creation and the most recent update will be stored automatically when relevant, and I have counters for how many clicks the github and live links are clicked.\n
    The Post model contains fields for the title, a subtitle (very short descrption), the content, author (though I may remove as this appears to be redundant. Everything written here is by yours truly), an array referencing comments, an array tracking who has liked said Post, and a views counter.\n
    The Comment model is my smallest one yet, and the data contained therein depicts the content, references for the author of the comment, and references to the associated post. I intend to implement the ability to let users comment on other comments, but I have yet to decide wether I should be creating a Reply object, or if using the Comment model would be good enough for what I want.\n
    The models are used by the controllers, which are choc full of functions for handling the exchange of data to and from the database. Throughout my coding bootcamp experience this past winter, we were taught to name files fairly succinctly. For example, my User controller would likely have been called userController.js. For this project, and the sheer number of files that I am working with, I have decided to use multiple dots in my file names when neccesary. For instance, user.model.js and user.controller.js and user.text.js are all examples of files in my codebase, but it appears to me to be easier to read, and simpler to understand. It is my hope that the same can be said for other people reading through my code.\n
    The functions from the controllers are then imported in my routing files (read user.routes.js, etc), which dictate which functions are used for each API endpoint. This modularity with which I am coding seemed daunting when I first starting working with node and express, but now I love it for how it separates each step in the process from each other.\n
    Outside of the database configuration file and the server.js file, the last big chunk of my server folder is the tests folder. Now, I missed the day of the bootcamp that went over this (Burnout is real, so don't forget to take a day off when you absolutely need it!) and there was no mandatory assignment for it, so I learned it on my own for the purposes of this project. It wasn't necessarily easy, but I was able to pick it up, and by the time I had finished a couple test pages, I felt I had a pretty strong handle on it. It's also nice to see those tests pass every time I run them.\n
    It was a lot of fun jumping into Postman and testing out my API calls to make sure they worked. Paired with the vitest/jest tests, I felt very confident in the work I was doing. Before long, my plan is to use the \"AdminStatus\" boolean in the User model and ternary operators to add options for adding, editing, and deleting posts and projects, keeping the access for only myself, it being my blog and all. This addition will remove the need for me to use external tools to fill the site with my own data."

-----------------------------------------------------------

"Title": "Client-side Development for Blog/Portfolio"
"Subtitle": "Behind the scenes of the cleint-side development"
"Content": 
    "The front-end of this website hasn't gone quite as quickly as the back-end because I was far more certain about what I wanted on the backend. Even though I created mockups for the different pages of this app, I kept changing my mind. One aspect of full-stack web dev that I feel was glossed over during both my Bachelor's Degree coursework and the Coding Bootcamp is design. I learned how to make what I'm seeing, or what is in a mockup. That's fine and well, but I have struggled at times to design content for myself./n At this point, I do really like the style and layout of my app, but it took some time for me to get to that point. I think a Udemy course about design is in my near future. I'd like to feel more confident about making something that other people find appealing. At the same time, Accessibility is important and I'd like as many people as possible to be able to access my site./n I used Chakra-ui/React in another project and really enjoyed working with it, so I decided to use it here. We used Bootstrap 5 several times during the bootcamp, but twitter's ui library leaves a lot to be desired in terms of customization. Chakra-ui is much lighter, and I felt it was much easier and faster to style it the way I wanted. I ran into issues with v3, so I reverted to v2 and found the older version's documentation. I have had no issues with it since./n Upon load, I created a page with a brief logo, my name, and role that shows for only a couple of seconds before fading into the home page. Image was created with OpenAI's Sora AI image generator. Because the image is originally in portrait, and had to change the color of the background to match the image. The image of myself and my dog at the top-center of the page is created using the same software. I uploaded an actual image of me with my dog, and asked for a cartooonized version. I think it's pretty fun!/n I worked hard to separate as much as possible into their own react components so that when it comes to coding the different pages, it simply comes down to detailing the correct components, functions, and props./n So far, the hardest part of the styling has come from issues moving from chakra-ui v3 to v2. There are many differences in how each version is set up and used within the react app. I spent about a week migrating from one to the other, but am so glad I was able to get it worked out./n In a future post, I will talk about the Storybook software, which I used to help my design my components in isolation. It was a great help!"

---------------------------------------------

"title": "Credly Credential"
"subtitle: "Got my badge from U-of-M!"
"content":
    "A couple of weeks ago, I recieved an email from Credly with a link to access a badge. I follow the link and, lo-and-behold, I got a badge from the University of Minnesota to brag about my certificate in Full Stack Web Development./n Once I found out I could download it, I added it to my app header component. My Name/Role, Cartoon image, and Badge now all share a Chakra-UI HStack component, and boy does it look good up there!/n Anyway, I'm just excited to show it off to the world. I worked super hard for several months to keep up with the bootcamp workload, my full time day job, make sure my wife doesn't feel unattended to, and my health. The badge is a nice reminder that I DID IT!"

--------------------------------------------
